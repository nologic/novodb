# Build Novodblib
FILE(GLOB NDB_WEB_CPP Independent/*.cpp 
                      ${CMAKE_SYSTEM_NAME}/*.cpp)

set(Boost_USE_STATIC_LIBS ON)
FIND_PACKAGE(Boost COMPONENTS filesystem log system thread REQUIRED)

INCLUDE_DIRECTORIES(../libs/civetweb_include
					../novodblib_src/Independent
					Independent
					${Boost_INCLUDE_DIR})

ADD_EXECUTABLE(novodbweb ${NDB_WEB_CPP})

FIND_LIBRARY(NETLIB cppnetlib-uri PATHS ../libs NO_DEFAULT_PATH)
FIND_LIBRARY(CIVETLIB NAMES civetweb PATHS ../libs NO_DEFAULT_PATH)
FIND_LIBRARY(YARA_LIBRARY NAMES yara PATHS ../libs NO_DEFAULT_PATH)

IF(APPLE)
	# find apple frameworks.
   FIND_LIBRARY(LLDB_LIBRARY LLDB PATHS ../libs)
   MARK_AS_ADVANCED (LLDB_LIBRARY)
   SET(EXTRA_LIBS ${LLDB_LIBRARY})

	FIND_LIBRARY(SYSTEM_LIBRARY NAMES System PATHS ../libs)
	TARGET_LINK_LIBRARIES(novodbweb ${SYSTEM_LIBRARY})

	FIND_LIBRARY(CRYPTO_LIBRARY NAMES crypto PATHS ../libs)
	TARGET_LINK_LIBRARIES(novodbweb ${CRYPTO_LIBRARY})
ENDIF (APPLE)


TARGET_LINK_LIBRARIES(novodbweb ${Boost_LIBRARIES})
TARGET_LINK_LIBRARIES(novodbweb ${CIVETLIB})
TARGET_LINK_LIBRARIES(novodbweb novolib)
TARGET_LINK_LIBRARIES(novodbweb ${EXTRA_LIBS} )
TARGET_LINK_LIBRARIES(novodbweb ${YARA_LIBRARY} )
TARGET_LINK_LIBRARIES(novodbweb ${NETLIB} )

message(STATUS "Novodb Webserver files: ${NDB_WEB_CPP}")
